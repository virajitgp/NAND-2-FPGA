#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
S_0x5a8b5b581f00 .scope module, "CPU_tb" "CPU_tb" 2 3;
 .timescale 0 0;
v0x5a8b5b5a6480_0 .net "addressM", 15 0, L_0x5a8b5b5b8ad0;  1 drivers
v0x5a8b5b5a6590_0 .var "clk", 0 0;
v0x5a8b5b5a6630_0 .var "inM", 15 0;
v0x5a8b5b5a6730_0 .var "instruction", 15 0;
v0x5a8b5b5a6800_0 .net "outM", 15 0, L_0x5a8b5b5b88c0;  1 drivers
v0x5a8b5b5a68a0_0 .net "pc", 15 0, v0x5a8b5b5a3ad0_0;  1 drivers
v0x5a8b5b5a6940_0 .var "reset", 0 0;
v0x5a8b5b5a6a30_0 .net "writeM", 0 0, L_0x5a8b5b5b8980;  1 drivers
S_0x5a8b5b581b80 .scope module, "uut" "CPU" 2 18, 3 6 0, S_0x5a8b5b581f00;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 16 "instruction";
    .port_info 2 /INPUT 16 "inM";
    .port_info 3 /INPUT 1 "reset";
    .port_info 4 /OUTPUT 16 "outM";
    .port_info 5 /OUTPUT 1 "writeM";
    .port_info 6 /OUTPUT 16 "addressM";
    .port_info 7 /OUTPUT 16 "pc";
L_0x5a8b5b585b00 .functor NOT 1, L_0x5a8b5b5a6ad0, C4<0>, C4<0>, C4<0>;
L_0x5a8b5b5a75a0 .functor AND 1, L_0x5a8b5b5a6ad0, L_0x5a8b5b5a72c0, C4<1>, C4<1>;
L_0x5a8b5b585e40 .functor OR 1, L_0x5a8b5b585b00, L_0x5a8b5b5a75a0, C4<0>, C4<0>;
L_0x5a8b5b5861a0 .functor AND 1, L_0x5a8b5b5a6ad0, L_0x5a8b5b5a7360, C4<1>, C4<1>;
L_0x5a8b5b5b88c0 .functor BUFZ 16, v0x5a8b5b5a2810_0, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
L_0x5a8b5b5b8980 .functor AND 1, L_0x5a8b5b5a6ad0, L_0x5a8b5b5a7460, C4<1>, C4<1>;
L_0x5a8b5b5b8ad0 .functor BUFZ 16, v0x5a8b5b585fa0_0, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
L_0x5a8b5b5b8c20 .functor NOT 1, L_0x5a8b5b5b8600, C4<0>, C4<0>, C4<0>;
L_0x5a8b5b5b8ce0 .functor NOT 1, L_0x5a8b5b5b8780, C4<0>, C4<0>, C4<0>;
L_0x5a8b5b5b8d50 .functor AND 1, L_0x5a8b5b5b8c20, L_0x5a8b5b5b8ce0, C4<1>, C4<1>;
L_0x5a8b5b5b8e70 .functor BUFZ 1, L_0x5a8b5b5b8600, C4<0>, C4<0>, C4<0>;
L_0x5a8b5b5b8f70 .functor BUFZ 1, L_0x5a8b5b5b8780, C4<0>, C4<0>, C4<0>;
L_0x5a8b5b5b90e0 .functor AND 1, L_0x5a8b5b5a7500, L_0x5a8b5b5b8d50, C4<1>, C4<1>;
L_0x5a8b5b5b9150 .functor AND 1, L_0x5a8b5b5a7610, L_0x5a8b5b5b8e70, C4<1>, C4<1>;
L_0x5a8b5b5b9070 .functor OR 1, L_0x5a8b5b5b90e0, L_0x5a8b5b5b9150, C4<0>, C4<0>;
L_0x5a8b5b5b9330 .functor AND 1, L_0x5a8b5b5a76b0, L_0x5a8b5b5b8f70, C4<1>, C4<1>;
L_0x5a8b5b5b94d0 .functor OR 1, L_0x5a8b5b5b9070, L_0x5a8b5b5b9330, C4<0>, C4<0>;
L_0x5a8b5b5b95e0 .functor AND 1, L_0x5a8b5b5a6ad0, L_0x5a8b5b5b94d0, C4<1>, C4<1>;
L_0x5a8b5b5b9790 .functor NOT 1, L_0x5a8b5b5b95e0, C4<0>, C4<0>, C4<0>;
v0x5a8b5b5a3d80_0 .net *"_ivl_32", 0 0, L_0x5a8b5b5a75a0;  1 drivers
v0x5a8b5b5a3e80_0 .net *"_ivl_46", 0 0, L_0x5a8b5b5b8c20;  1 drivers
v0x5a8b5b5a3f60_0 .net *"_ivl_48", 0 0, L_0x5a8b5b5b8ce0;  1 drivers
v0x5a8b5b5a4020_0 .net *"_ivl_56", 0 0, L_0x5a8b5b5b90e0;  1 drivers
v0x5a8b5b5a4100_0 .net *"_ivl_58", 0 0, L_0x5a8b5b5b9150;  1 drivers
v0x5a8b5b5a4230_0 .net *"_ivl_60", 0 0, L_0x5a8b5b5b9070;  1 drivers
v0x5a8b5b5a4310_0 .net *"_ivl_62", 0 0, L_0x5a8b5b5b9330;  1 drivers
v0x5a8b5b5a43f0_0 .net "a_reg_in", 15 0, L_0x5a8b5b5a77d0;  1 drivers
v0x5a8b5b5a44b0_0 .net "a_reg_load", 0 0, L_0x5a8b5b585e40;  1 drivers
v0x5a8b5b5a4580_0 .net "a_reg_out", 15 0, v0x5a8b5b585fa0_0;  1 drivers
v0x5a8b5b5a4620_0 .net "addressM", 15 0, L_0x5a8b5b5b8ad0;  alias, 1 drivers
v0x5a8b5b5a46e0_0 .net "alu_a_bit", 0 0, L_0x5a8b5b5a71d0;  1 drivers
v0x5a8b5b5a47a0_0 .net "alu_f", 0 0, L_0x5a8b5b5a6fb0;  1 drivers
v0x5a8b5b5a4840_0 .net "alu_ng", 0 0, L_0x5a8b5b5b8780;  1 drivers
v0x5a8b5b5a4910_0 .net "alu_no", 0 0, L_0x5a8b5b5a70e0;  1 drivers
v0x5a8b5b5a49e0_0 .net "alu_nx", 0 0, L_0x5a8b5b5a6d00;  1 drivers
v0x5a8b5b5a4ab0_0 .net "alu_ny", 0 0, L_0x5a8b5b5a6ec0;  1 drivers
v0x5a8b5b5a4c90_0 .net "alu_out", 15 0, v0x5a8b5b5a2810_0;  1 drivers
v0x5a8b5b5a4d80_0 .net "alu_y_in", 15 0, L_0x5a8b5b5a7c10;  1 drivers
v0x5a8b5b5a4e20_0 .net "alu_zr", 0 0, L_0x5a8b5b5b8600;  1 drivers
v0x5a8b5b5a4ef0_0 .net "alu_zx", 0 0, L_0x5a8b5b5a6c10;  1 drivers
v0x5a8b5b5a4fc0_0 .net "alu_zy", 0 0, L_0x5a8b5b5a6df0;  1 drivers
v0x5a8b5b5a5090_0 .net "clk", 0 0, v0x5a8b5b5a6590_0;  1 drivers
v0x5a8b5b5a5130_0 .net "d_reg_load", 0 0, L_0x5a8b5b5861a0;  1 drivers
v0x5a8b5b5a5200_0 .net "d_reg_out", 15 0, v0x5a8b5b5a33e0_0;  1 drivers
v0x5a8b5b5a52f0_0 .net "dest_a", 0 0, L_0x5a8b5b5a72c0;  1 drivers
v0x5a8b5b5a5390_0 .net "dest_d", 0 0, L_0x5a8b5b5a7360;  1 drivers
v0x5a8b5b5a5430_0 .net "dest_m", 0 0, L_0x5a8b5b5a7460;  1 drivers
v0x5a8b5b5a54d0_0 .net "inM", 15 0, v0x5a8b5b5a6630_0;  1 drivers
v0x5a8b5b5a5570_0 .net "instruction", 15 0, v0x5a8b5b5a6730_0;  1 drivers
v0x5a8b5b5a5610_0 .net "is_a_instruction", 0 0, L_0x5a8b5b585b00;  1 drivers
v0x5a8b5b5a56d0_0 .net "is_c_instruction", 0 0, L_0x5a8b5b5a6ad0;  1 drivers
v0x5a8b5b5a5790_0 .net "j1", 0 0, L_0x5a8b5b5a7500;  1 drivers
v0x5a8b5b5a5a60_0 .net "j2", 0 0, L_0x5a8b5b5a7610;  1 drivers
v0x5a8b5b5a5b20_0 .net "j3", 0 0, L_0x5a8b5b5a76b0;  1 drivers
v0x5a8b5b5a5be0_0 .net "jeq", 0 0, L_0x5a8b5b5b8e70;  1 drivers
v0x5a8b5b5a5ca0_0 .net "jgt", 0 0, L_0x5a8b5b5b8d50;  1 drivers
v0x5a8b5b5a5d60_0 .net "jlt", 0 0, L_0x5a8b5b5b8f70;  1 drivers
v0x5a8b5b5a5e20_0 .net "jump_condition", 0 0, L_0x5a8b5b5b94d0;  1 drivers
v0x5a8b5b5a5ee0_0 .net "outM", 15 0, L_0x5a8b5b5b88c0;  alias, 1 drivers
v0x5a8b5b5a5fc0_0 .net "pc", 15 0, v0x5a8b5b5a3ad0_0;  alias, 1 drivers
v0x5a8b5b5a6080_0 .net "pc_inc", 0 0, L_0x5a8b5b5b9790;  1 drivers
v0x5a8b5b5a6150_0 .net "pc_load", 0 0, L_0x5a8b5b5b95e0;  1 drivers
v0x5a8b5b5a6220_0 .net "reset", 0 0, v0x5a8b5b5a6940_0;  1 drivers
v0x5a8b5b5a62f0_0 .net "writeM", 0 0, L_0x5a8b5b5b8980;  alias, 1 drivers
L_0x5a8b5b5a6ad0 .part v0x5a8b5b5a6730_0, 15, 1;
L_0x5a8b5b5a6c10 .part v0x5a8b5b5a6730_0, 11, 1;
L_0x5a8b5b5a6d00 .part v0x5a8b5b5a6730_0, 10, 1;
L_0x5a8b5b5a6df0 .part v0x5a8b5b5a6730_0, 9, 1;
L_0x5a8b5b5a6ec0 .part v0x5a8b5b5a6730_0, 8, 1;
L_0x5a8b5b5a6fb0 .part v0x5a8b5b5a6730_0, 7, 1;
L_0x5a8b5b5a70e0 .part v0x5a8b5b5a6730_0, 6, 1;
L_0x5a8b5b5a71d0 .part v0x5a8b5b5a6730_0, 12, 1;
L_0x5a8b5b5a72c0 .part v0x5a8b5b5a6730_0, 5, 1;
L_0x5a8b5b5a7360 .part v0x5a8b5b5a6730_0, 4, 1;
L_0x5a8b5b5a7460 .part v0x5a8b5b5a6730_0, 3, 1;
L_0x5a8b5b5a7500 .part v0x5a8b5b5a6730_0, 2, 1;
L_0x5a8b5b5a7610 .part v0x5a8b5b5a6730_0, 1, 1;
L_0x5a8b5b5a76b0 .part v0x5a8b5b5a6730_0, 0, 1;
L_0x5a8b5b5a77d0 .functor MUXZ 16, v0x5a8b5b5a2810_0, v0x5a8b5b5a6730_0, L_0x5a8b5b585b00, C4<>;
L_0x5a8b5b5a7c10 .functor MUXZ 16, v0x5a8b5b585fa0_0, v0x5a8b5b5a6630_0, L_0x5a8b5b5a71d0, C4<>;
S_0x5a8b5b583170 .scope module, "a_register" "Register" 3 62, 4 2 0, S_0x5a8b5b581b80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "load";
    .port_info 2 /INPUT 16 "in";
    .port_info 3 /OUTPUT 16 "out";
v0x5a8b5b585650_0 .net "clk", 0 0, v0x5a8b5b5a6590_0;  alias, 1 drivers
v0x5a8b5b585940_0 .net "in", 15 0, L_0x5a8b5b5a77d0;  alias, 1 drivers
v0x5a8b5b585c60_0 .net "load", 0 0, L_0x5a8b5b585e40;  alias, 1 drivers
v0x5a8b5b585fa0_0 .var "out", 15 0;
E_0x5a8b5b56d9f0 .event posedge, v0x5a8b5b585650_0;
S_0x5a8b5b5a1b00 .scope module, "alu" "HackALU" 3 83, 5 1 0, S_0x5a8b5b581b80;
 .timescale 0 0;
    .port_info 0 /INPUT 16 "x";
    .port_info 1 /INPUT 16 "y";
    .port_info 2 /INPUT 1 "zx";
    .port_info 3 /INPUT 1 "nx";
    .port_info 4 /INPUT 1 "zy";
    .port_info 5 /INPUT 1 "ny";
    .port_info 6 /INPUT 1 "f";
    .port_info 7 /INPUT 1 "no";
    .port_info 8 /OUTPUT 16 "out";
    .port_info 9 /OUTPUT 1 "zr";
    .port_info 10 /OUTPUT 1 "ng";
L_0x5a8b5b5843e0 .functor NOT 16, v0x5a8b5b5a33e0_0, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
L_0x5a8b5b55f380 .functor NOT 16, L_0x5a8b5b5a7c10, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
L_0x5a8b5b5b8370 .functor AND 16, L_0x5a8b5b5b7f70, L_0x5a8b5b5b8190, C4<1111111111111111>, C4<1111111111111111>;
L_0x7e40ba386018 .functor BUFT 1, C4<0000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5a8b5b586300_0 .net/2u *"_ivl_0", 15 0, L_0x7e40ba386018;  1 drivers
v0x5a8b5b584580_0 .net *"_ivl_10", 15 0, L_0x5a8b5b55f380;  1 drivers
v0x5a8b5b55f4a0_0 .net *"_ivl_12", 15 0, L_0x5a8b5b5b8060;  1 drivers
v0x5a8b5b5a1de0_0 .net *"_ivl_16", 15 0, L_0x5a8b5b5b82d0;  1 drivers
v0x5a8b5b5a1ec0_0 .net *"_ivl_18", 15 0, L_0x5a8b5b5b8370;  1 drivers
v0x5a8b5b5a1ff0_0 .net *"_ivl_2", 15 0, L_0x5a8b5b5843e0;  1 drivers
L_0x7e40ba3860a8 .functor BUFT 1, C4<0000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5a8b5b5a20d0_0 .net/2u *"_ivl_22", 15 0, L_0x7e40ba3860a8;  1 drivers
v0x5a8b5b5a21b0_0 .net *"_ivl_4", 15 0, L_0x5a8b5b5b7e40;  1 drivers
L_0x7e40ba386060 .functor BUFT 1, C4<0000000000000000>, C4<0>, C4<0>, C4<0>;
v0x5a8b5b5a2290_0 .net/2u *"_ivl_8", 15 0, L_0x7e40ba386060;  1 drivers
v0x5a8b5b5a2370_0 .net "f", 0 0, L_0x5a8b5b5a6fb0;  alias, 1 drivers
v0x5a8b5b5a2430_0 .net "f_out", 15 0, L_0x5a8b5b5b8480;  1 drivers
v0x5a8b5b5a2510_0 .net "ng", 0 0, L_0x5a8b5b5b8780;  alias, 1 drivers
v0x5a8b5b5a25d0_0 .net "no", 0 0, L_0x5a8b5b5a70e0;  alias, 1 drivers
v0x5a8b5b5a2690_0 .net "nx", 0 0, L_0x5a8b5b5a6d00;  alias, 1 drivers
v0x5a8b5b5a2750_0 .net "ny", 0 0, L_0x5a8b5b5a6ec0;  alias, 1 drivers
v0x5a8b5b5a2810_0 .var "out", 15 0;
v0x5a8b5b5a28f0_0 .net "x", 15 0, v0x5a8b5b5a33e0_0;  alias, 1 drivers
v0x5a8b5b5a29d0_0 .net "x_processed", 15 0, L_0x5a8b5b5b7f70;  1 drivers
v0x5a8b5b5a2ab0_0 .net "y", 15 0, L_0x5a8b5b5a7c10;  alias, 1 drivers
v0x5a8b5b5a2b90_0 .net "y_processed", 15 0, L_0x5a8b5b5b8190;  1 drivers
v0x5a8b5b5a2c70_0 .net "zr", 0 0, L_0x5a8b5b5b8600;  alias, 1 drivers
v0x5a8b5b5a2d30_0 .net "zx", 0 0, L_0x5a8b5b5a6c10;  alias, 1 drivers
v0x5a8b5b5a2df0_0 .net "zy", 0 0, L_0x5a8b5b5a6df0;  alias, 1 drivers
E_0x5a8b5b54e4f0 .event anyedge, v0x5a8b5b5a25d0_0, v0x5a8b5b5a2430_0;
L_0x5a8b5b5b7e40 .functor MUXZ 16, v0x5a8b5b5a33e0_0, L_0x5a8b5b5843e0, L_0x5a8b5b5a6d00, C4<>;
L_0x5a8b5b5b7f70 .functor MUXZ 16, L_0x5a8b5b5b7e40, L_0x7e40ba386018, L_0x5a8b5b5a6c10, C4<>;
L_0x5a8b5b5b8060 .functor MUXZ 16, L_0x5a8b5b5a7c10, L_0x5a8b5b55f380, L_0x5a8b5b5a6ec0, C4<>;
L_0x5a8b5b5b8190 .functor MUXZ 16, L_0x5a8b5b5b8060, L_0x7e40ba386060, L_0x5a8b5b5a6df0, C4<>;
L_0x5a8b5b5b82d0 .arith/sum 16, L_0x5a8b5b5b7f70, L_0x5a8b5b5b8190;
L_0x5a8b5b5b8480 .functor MUXZ 16, L_0x5a8b5b5b8370, L_0x5a8b5b5b82d0, L_0x5a8b5b5a6fb0, C4<>;
L_0x5a8b5b5b8600 .cmp/eq 16, v0x5a8b5b5a2810_0, L_0x7e40ba3860a8;
L_0x5a8b5b5b8780 .part v0x5a8b5b5a2810_0, 15, 1;
S_0x5a8b5b5a3010 .scope module, "d_register" "Register" 3 72, 4 2 0, S_0x5a8b5b581b80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "load";
    .port_info 2 /INPUT 16 "in";
    .port_info 3 /OUTPUT 16 "out";
v0x5a8b5b5a31a0_0 .net "clk", 0 0, v0x5a8b5b5a6590_0;  alias, 1 drivers
v0x5a8b5b5a3240_0 .net "in", 15 0, v0x5a8b5b5a2810_0;  alias, 1 drivers
v0x5a8b5b5a3310_0 .net "load", 0 0, L_0x5a8b5b5861a0;  alias, 1 drivers
v0x5a8b5b5a33e0_0 .var "out", 15 0;
S_0x5a8b5b5a3540 .scope module, "program_counter" "PC" 3 112, 6 1 0, S_0x5a8b5b581b80;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "reset";
    .port_info 2 /INPUT 1 "inc";
    .port_info 3 /INPUT 1 "load";
    .port_info 4 /INPUT 16 "in";
    .port_info 5 /OUTPUT 16 "out";
v0x5a8b5b5a37c0_0 .net "clk", 0 0, v0x5a8b5b5a6590_0;  alias, 1 drivers
v0x5a8b5b5a38d0_0 .net "in", 15 0, v0x5a8b5b585fa0_0;  alias, 1 drivers
v0x5a8b5b5a3990_0 .net "inc", 0 0, L_0x5a8b5b5b9790;  alias, 1 drivers
v0x5a8b5b5a3a30_0 .net "load", 0 0, L_0x5a8b5b5b95e0;  alias, 1 drivers
v0x5a8b5b5a3ad0_0 .var "out", 15 0;
v0x5a8b5b5a3c00_0 .net "reset", 0 0, v0x5a8b5b5a6940_0;  alias, 1 drivers
    .scope S_0x5a8b5b583170;
T_0 ;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x5a8b5b585fa0_0, 0, 16;
    %end;
    .thread T_0;
    .scope S_0x5a8b5b583170;
T_1 ;
    %wait E_0x5a8b5b56d9f0;
    %load/vec4 v0x5a8b5b585c60_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %load/vec4 v0x5a8b5b585940_0;
    %assign/vec4 v0x5a8b5b585fa0_0, 0;
T_1.0 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0x5a8b5b5a3010;
T_2 ;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x5a8b5b5a33e0_0, 0, 16;
    %end;
    .thread T_2;
    .scope S_0x5a8b5b5a3010;
T_3 ;
    %wait E_0x5a8b5b56d9f0;
    %load/vec4 v0x5a8b5b5a3310_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.0, 8;
    %load/vec4 v0x5a8b5b5a3240_0;
    %assign/vec4 v0x5a8b5b5a33e0_0, 0;
T_3.0 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0x5a8b5b5a1b00;
T_4 ;
    %wait E_0x5a8b5b54e4f0;
    %load/vec4 v0x5a8b5b5a25d0_0;
    %flag_set/vec4 8;
    %jmp/0 T_4.0, 8;
    %load/vec4 v0x5a8b5b5a2430_0;
    %inv;
    %jmp/1 T_4.1, 8;
T_4.0 ; End of true expr.
    %load/vec4 v0x5a8b5b5a2430_0;
    %jmp/0 T_4.1, 8;
 ; End of false expr.
    %blend;
T_4.1;
    %store/vec4 v0x5a8b5b5a2810_0, 0, 16;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_0x5a8b5b5a3540;
T_5 ;
    %wait E_0x5a8b5b56d9f0;
    %load/vec4 v0x5a8b5b5a3c00_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.0, 8;
    %pushi/vec4 0, 0, 16;
    %assign/vec4 v0x5a8b5b5a3ad0_0, 0;
    %jmp T_5.1;
T_5.0 ;
    %load/vec4 v0x5a8b5b5a3a30_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.2, 8;
    %load/vec4 v0x5a8b5b5a38d0_0;
    %assign/vec4 v0x5a8b5b5a3ad0_0, 0;
    %jmp T_5.3;
T_5.2 ;
    %load/vec4 v0x5a8b5b5a3990_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.4, 8;
    %load/vec4 v0x5a8b5b5a3ad0_0;
    %addi 1, 0, 16;
    %assign/vec4 v0x5a8b5b5a3ad0_0, 0;
T_5.4 ;
T_5.3 ;
T_5.1 ;
    %jmp T_5;
    .thread T_5;
    .scope S_0x5a8b5b581f00;
T_6 ;
    %delay 5, 0;
    %load/vec4 v0x5a8b5b5a6590_0;
    %inv;
    %store/vec4 v0x5a8b5b5a6590_0, 0, 1;
    %jmp T_6;
    .thread T_6;
    .scope S_0x5a8b5b581f00;
T_7 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5a8b5b5a6590_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5a8b5b5a6940_0, 0, 1;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x5a8b5b5a6730_0, 0, 16;
    %pushi/vec4 0, 0, 16;
    %store/vec4 v0x5a8b5b5a6630_0, 0, 16;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5a8b5b5a6940_0, 0, 1;
    %wait E_0x5a8b5b56d9f0;
    %pushi/vec4 10, 0, 16;
    %store/vec4 v0x5a8b5b5a6730_0, 0, 16;
    %wait E_0x5a8b5b56d9f0;
    %pushi/vec4 59536, 0, 16;
    %store/vec4 v0x5a8b5b5a6730_0, 0, 16;
    %wait E_0x5a8b5b56d9f0;
    %pushi/vec4 11, 0, 16;
    %store/vec4 v0x5a8b5b5a6730_0, 0, 16;
    %wait E_0x5a8b5b56d9f0;
    %pushi/vec4 57992, 0, 16;
    %store/vec4 v0x5a8b5b5a6730_0, 0, 16;
    %wait E_0x5a8b5b56d9f0;
    %vpi_call 2 61 "$finish" {0 0 0};
    %end;
    .thread T_7;
    .scope S_0x5a8b5b581f00;
T_8 ;
    %vpi_call 2 66 "$monitor", "Time=%0t, PC=%d, Inst=%b, AddrM=%d, OutM=%d, WriteM=%b, A_reg=%d, D_reg=%d", $time, v0x5a8b5b5a68a0_0, v0x5a8b5b5a6730_0, v0x5a8b5b5a6480_0, v0x5a8b5b5a6800_0, v0x5a8b5b5a6a30_0, v0x5a8b5b5a4580_0, v0x5a8b5b5a5200_0 {0 0 0};
    %end;
    .thread T_8;
# The file index is used to find the file name in the following table.
:file_names 7;
    "N/A";
    "<interactive>";
    "project_cpu/CPU-tb.v";
    "project_cpu/CPU.v";
    "project_cpu/../project_3/register/reg.v";
    "project_cpu/HackALU.v";
    "project_cpu/../project_3/prog_counter/pc.v";
